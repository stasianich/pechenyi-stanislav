{"version":3,"sources":["components/AddTodoForm/AddTodoForm.jsx","components/TodoList/TodoList.jsx","App.jsx","api/request.jsx","index.js"],"names":["AddTodoForm","onAdd","useState","title","setTitle","completed","setCompleted","userId","setUserId","className","onSubmit","event","preventDefault","type","name","value","onChange","target","required","checked","disabled","TodoList","todos","onDelete","length","color","height","width","map","todo","classNames","key","id","onClick","App","setTodos","useEffect","a","fetch","then","response","json","newTodo","preparedTodos","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e148a43.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './AddTodoForm.scss';\nimport PropTypes from 'prop-types';\n\nexport const AddTodoForm = ({ onAdd }) => {\n  const [title, setTitle] = useState('');\n  const [completed, setCompleted] = useState(false);\n  const [userId, setUserId] = useState('0');\n\n  const clearForm = () => {\n    setTitle('');\n    setCompleted(false);\n    setUserId('0');\n  };\n\n  return (\n    <div className=\"add-todo\">\n      <form\n        className=\"add-todo-form form-group\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          onAdd(userId, title, completed);\n          clearForm();\n        }}\n      >\n        <div className=\"form-group\">\n          <label className=\"add-todo-form__title col-form-label col-sm-10\">\n            Enter title:\n            <input\n              type=\"text\"\n              name=\"title\"\n              className=\"add-todo-form__title form-control\"\n              value={title}\n              onChange={event => setTitle(event.target.value)}\n              required\n            />\n          </label>\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check\">\n            <label className=\"add-todo-form__completed form-check-label\">\n              <input\n                type=\"radio\"\n                className=\"form-check-input\"\n                name=\"completed\"\n                checked={completed}\n                onChange={() => setCompleted(true)}\n              />\n              Completed\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <label className=\"add-todo-form__completed form-check-label\">\n              <input\n                type=\"radio\"\n                className=\"form-check-input\"\n                name=\"completed\"\n                checked={!completed}\n                onChange={() => setCompleted(false)}\n              />\n              Uncompleted\n            </label>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <label className=\"add-todo-form__user-id col-form-label col-sm-10\">\n            Select user:\n            <select\n              name=\"userId\"\n              className=\"form-control\"\n              value={userId}\n              onChange={event => setUserId(event.target.value)}\n            >\n              <option value=\"0\" disabled>Select user</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n              <option value=\"10\">10</option>\n            </select>\n          </label>\n          <button\n            type=\"submit\"\n            className=\"add-todo-form__submit-button btn btn-primary\"\n          >\n            Add todo\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nAddTodoForm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\n\nexport const TodoList = ({ todos, onDelete }) => {\n  if (todos.length === 0) {\n    return (\n      <div className=\"loading\">\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={100}\n          width={100}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"TodoList text-center\">\n      <h2>\n        {`Todos: ${todos.length}`}\n      </h2>\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list d-flex flex-column align-items-center\">\n          {todos.map(todo => (\n            <li\n              className={classNames(\n                'TodoList__item',\n                'card',\n                'w-50',\n              )}\n              key={todo.id}\n            >\n              <div className=\"card-body d-flex flex-column align-items-center\">\n                <p>\n                  {todo.title}\n                </p>\n\n                User&nbsp;\n                {todo.userId}\n                <div className={\n                  classNames('todo-card__status', {\n                    'text-success': todo.completed,\n                    'text-danger': !todo.completed,\n                  })\n                }\n                >\n                  {todo.completed ? 'Finished' : 'Unfinished'}\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={() => onDelete(todo.id)}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { getTodos } from './api/request';\nimport { AddTodoForm } from './components/AddTodoForm';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = (\n    userId,\n    title,\n    completed,\n  ) => {\n    const newTodo = {\n      userId: +userId,\n      id: (todos.length + 1),\n      title,\n      completed,\n    };\n\n    setTodos([newTodo, ...todos]);\n  };\n\n  const deleteTodo = (id) => {\n    const preparedTodos = todos.filter(todo => todo.id !== id);\n\n    setTodos(preparedTodos);\n  };\n\n  useEffect(() => {\n    (async() => setTodos(await getTodos()))();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <AddTodoForm onAdd={addTodo} />\n      <TodoList\n        todos={todos}\n        onDelete={deleteTodo}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const URL = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const getTodos = () => (fetch(URL)\n  .then(response => response.json())\n);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}