{"version":3,"sources":["TodoList/TodoList.jsx","api/request.jsx","App.jsx","index.js"],"names":["TodoList","state","todos","deleteTodo","id","preparedTodos","filter","todo","setState","fetch","then","response","json","this","length","className","type","color","height","width","map","classNames","key","title","userId","completed","onClick","React","PureComponent","App","Component","ReactDOM","render","document","getElementById"],"mappings":"uSAOaA,EAAb,4MACEC,MAAQ,CACNC,MAAO,IAFX,EAUEC,WAAa,SAACC,GACZ,IAAMC,EAAgB,EAAKJ,MAAMC,MAC9BI,QAAO,SAACC,GAAD,OAAUA,EAAKH,KAAOA,KAEhC,EAAKI,SAAS,CACZN,MAAOG,KAfb,uDAKE,WAAqB,IAAD,OCVSI,MAFnB,8CAGTC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDWtBF,MAAK,SAAAR,GAAK,OAAI,EAAKM,SAAS,CAAEN,eAPrC,oBAmBE,WAAU,IAAD,OACAA,EAASW,KAAKZ,MAAdC,MAEP,OAAqB,IAAjBA,EAAMY,OAEN,yBAAKC,UAAU,WACb,kBAAC,IAAD,CACEC,KAAK,OACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,OAOb,yBAAKJ,UAAU,wBACb,6CACab,EAAMY,SAEnB,yBAAKC,UAAU,4BACb,wBAAIA,UAAU,wDACXb,EAAMkB,KAAI,SAAAb,GAAI,OACb,wBACEQ,UAAWM,IACT,iBACA,OACA,QAEFC,IAAKf,EAAKH,IAEV,yBAAKW,UAAU,mDACb,2BACGR,EAAKgB,OAFV,WAMGhB,EAAKiB,OACN,yBAAKT,UACHM,IAAW,oBAAqB,CAC9B,eAAgBd,EAAKkB,UACrB,eAAgBlB,EAAKkB,aAItBlB,EAAKkB,UAAY,WAAa,cAEjC,4BACET,KAAK,SACLU,QAAS,kBAAM,EAAKvB,WAAWI,EAAKH,MAFtC,sBAnElB,GAA8BuB,IAAMC,eEQrBC,E,4JAXb,WACE,OACE,yBAAKd,UAAU,OACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,Y,GALQY,IAAMG,WCCxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.5291d096.chunk.js","sourcesContent":["import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nimport { getTodos } from '../api/request';\n\nexport class TodoList extends React.PureComponent {\n  state = {\n    todos: [],\n  }\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => this.setState({ todos }));\n  }\n\n  deleteTodo = (id) => {\n    const preparedTodos = this.state.todos\n      .filter((todo) => todo.id !== id);\n\n    this.setState({\n      todos: preparedTodos,\n    });\n  }\n\n  render() {\n    const {todos} = this.state;\n\n    if (todos.length === 0) {\n      return (\n        <div className=\"loading\">\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"TodoList text-center\">\n        <h2>\n          {`Todos: ${todos.length}`}\n        </h2>\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list d-flex flex-column align-items-center\">\n            {todos.map(todo => (\n              <li\n                className={classNames(\n                  'TodoList__item',\n                  'card',\n                  'w-25'\n                )}\n                key={todo.id}\n              >\n                <div className=\"card-body d-flex flex-column align-items-center\">\n                  <p>\n                    {todo.title}\n                  </p>\n\n                  User&nbsp;\n                  {todo.userId}\n                  <div className={\n                    classNames('todo-card__status', {\n                      \"text-success\": todo.completed,\n                      \"text-danger\": !todo.completed,\n                    })\n                  }\n                  >\n                    {todo.completed ? 'Finished' : 'Unfinished'}\n                  </div>\n                  <button\n                    type=\"button\"\n                    onClick={() => this.deleteTodo(todo.id)}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      userId: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }),\n  ),\n};\n","const URL = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const getTodos = () => (fetch(URL)\n  .then(response => response.json())\n  // .then(todos => console.log(todos))\n);\n","import React from 'react';\nimport { TodoList } from './TodoList/TodoList';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}